import java.util.*;
import java.io.*;

class Main {
    static ArrayList<Integer>[] node;
    static int N;
    static boolean[] visit;
    static int[] parent;

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        N = Integer.parseInt(br.readLine());
        node = new ArrayList[N + 1];
        visit = new boolean[N + 1];
        parent = new int[N + 1]; 

        for (int i = 0; i <= N; i++) {
            node[i] = new ArrayList<>();
        }

        for (int i = 0; i < N - 1; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());

            node[a].add(b);
            node[b].add(a);
        }

        dfs(1);

        for (int i = 2; i < N+1; i++) {
            System.out.println(parent[i]);
        }
    }

    public static void dfs(int x) {
        visit[x] = true;

        for (int i : node[x]) {
            if (!visit[i]) {
                parent[i] = x;
                dfs(i);
            }
        }
    }
}
