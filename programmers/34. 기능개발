import java.util.*;
class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
        List<Integer> answer = new ArrayList<>();
        Queue<Integer> queue = new LinkedList<>();
        
        for(int i=0; i<progresses.length; i++){
            int p=100-progresses[i];
            if(p%speeds[i]==0)
                queue.add(p/speeds[i]);
            else
                queue.add((p/speeds[i])+1);
        }
        int cnt=1;
        int f=queue.poll();
        
        while(!queue.isEmpty()){
            if(f>=queue.peek()){
                cnt++;
                queue.poll();
            }
            else{
                answer.add(cnt);
                cnt=1;
                f=queue.poll();
            }
        }
        answer.add(cnt);

        
        return answer.stream().mapToInt(i -> i).toArray();
    }
}
